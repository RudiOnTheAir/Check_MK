 eps8XM-private DEFINITIONS ::= BEGIN

IMPORTS

    OBJECT-TYPE, enterprises
        FROM SNMPv2-SMI;

--
-- Define the Float Textual Convention
--   This definition was written by David Perkins.
--

Float ::= TEXTUAL-CONVENTION
    STATUS      current
    DESCRIPTION
        "A single precision floating-point number.  The semantics
         and encoding are identical for type 'single' defined in
         IEEE Standard for Binary Floating-Point,
         ANSI/IEEE Std 754-1985.
         The value is restricted to the BER serialization of
         the following ASN.1 type:
             FLOATTYPE ::= [120] IMPLICIT FloatType
         (note: the value 120 is the sum of '30'h and '48'h)
         The BER serialization of the length for values of
         this type must use the definite length, short
         encoding form.

         For example, the BER serialization of value 123
         of type FLOATTYPE is '9f780442f60000'h.  (The tag
         is '9f78'h; the length is '04'h; and the value is
         '42f60000'h.) The BER serialization of value
         '9f780442f60000'h of data type Opaque is
         '44079f780442f60000'h. (The tag is '44'h; the length
         is '07'h; and the value is '9f780442f60000'h."
    SYNTAX Opaque (SIZE (7))


ePowerSwitch	OBJECT IDENTIFIER ::= { enterprises 24734 }
eps8XM      	OBJECT IDENTIFIER ::= { ePowerSwitch 13 }
trap			OBJECT IDENTIFIER ::= { ePowerSwitch 1 }

------------------------------------------------------------
-- TRAP
------------------------------------------------------------
variables         OBJECT IDENTIFIER ::= { trap 1 }

	UserMessage OBJECT-TYPE
		SYNTAX  OCTET STRING
		ACCESS	not-accessible
		STATUS  mandatory
		DESCRIPTION
			"User message for trap"
		::= { variables 1 }


------------------------------------------------------------
-- SYSTEM
------------------------------------------------------------
System         	 OBJECT IDENTIFIER ::= {eps8XM 1 }

    version OBJECT-TYPE
        SYNTAX  OCTET STRING
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
            "System version"
        DEFVAL { false }
        ::= {System 1 }


------------------------------------------------------------
-- DEVICES
------------------------------------------------------------
Devices     OBJECT IDENTIFIER ::= { eps8XM 2 }

   	DeviceTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF DeviceEntry
        MAX-ACCESS  not-accessible
        STATUS  current
        DESCRIPTION
	        "Devices"
        ::= { Devices 1 }

    DeviceEntry OBJECT-TYPE
        SYNTAX  DeviceEntry
        MAX-ACCESS  not-accessible
        STATUS  current
        DESCRIPTION
              "Row definition for the Device table"
        INDEX   { DeviceId }
        ::= { DeviceTable 1 }

    DeviceEntry ::=
        SEQUENCE {
          DeviceId
              OCTET STRING,
          DeviceName
              OCTET STRING,
          DeviceActivated
              INTEGER,
          DeviceDetected
              INTEGER,
          DeviceType
              OCTET STRING,
          DeviceVersion
              OCTET STRING
        }

    DeviceId OBJECT-TYPE
        SYNTAX  OCTET STRING
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Device Id"
        ::= { DeviceEntry 1 }

    DeviceName OBJECT-TYPE
        SYNTAX  OCTET STRING
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Device name"
        ::= { DeviceEntry 2 }

    DeviceActivated OBJECT-TYPE
        SYNTAX  INTEGER { true(1), false(2) }
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Device activated"
        ::= { DeviceEntry 3 }

    DeviceDetected OBJECT-TYPE
        SYNTAX  INTEGER { true(1), false(2) }
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Device detected"
        ::= { DeviceEntry 4 }

    DeviceType OBJECT-TYPE
        SYNTAX  OCTET STRING
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Device type"
        ::= { DeviceEntry 5 }

    DeviceVersion OBJECT-TYPE
        SYNTAX  OCTET STRING
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Device version"
        ::= { DeviceEntry 6 }


------------------------------------------------------------
-- GROUPS
------------------------------------------------------------
Groups         	OBJECT IDENTIFIER ::= {eps8XM 3 }

   	GroupTable  OBJECT-TYPE
        SYNTAX  SEQUENCE OF GroupEntry
        MAX-ACCESS  not-accessible
        STATUS  current
        DESCRIPTION
	        "Groups"
        ::= { Groups 1 }

    GroupEntry  OBJECT-TYPE
        SYNTAX  GroupEntry
        MAX-ACCESS  not-accessible
        STATUS  current
        DESCRIPTION
              "Row definition for the Group table"
        INDEX   { GroupId }
        ::= { GroupTable 1 }

    GroupEntry ::=
        SEQUENCE {
          GroupId
              OCTET STRING,
          GroupName
              OCTET STRING,
          GroupState
              OCTET STRING,
          GroupFunctionList
              OCTET STRING,
          GroupFunction
              INTEGER
        }

    GroupId OBJECT-TYPE
        SYNTAX  OCTET STRING
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Group Id"
        ::= { GroupEntry 1 }

    GroupName OBJECT-TYPE
        SYNTAX  OCTET STRING
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Group name"
        ::= { GroupEntry 2 }

    GroupState OBJECT-TYPE
        SYNTAX  OCTET STRING
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Group State"
        ::= { GroupEntry 3 }

    GroupFunctionList OBJECT-TYPE
		SYNTAX  OCTET STRING
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Group Function List"
        ::= { GroupEntry 4 }

    GroupFunction OBJECT-TYPE
		SYNTAX  INTEGER {ready(1), inProgress(2)}
        MAX-ACCESS  read-write
        STATUS  current
        DESCRIPTION
              "Group Function
              When read, returns if action in progress or not:
              ready(1), inProgress(2).
              When write, execute the action described in 
              GroupFunctionList"
        ::= { GroupEntry 5 }




------------------------------------------------------------
-- ANALOG INPUTS
------------------------------------------------------------

AnalogInputs   OBJECT IDENTIFIER ::= {eps8XM 4 }

    AnalogInputTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF AnalogInputEntry
        MAX-ACCESS  not-accessible
        STATUS  current
        DESCRIPTION
	        "Analog Input"
        ::= { AnalogInputs 1 }

    AnalogInputEntry OBJECT-TYPE
        SYNTAX  AnalogInputEntry
        MAX-ACCESS  not-accessible
        STATUS  current
        DESCRIPTION
              "Row definition for the Analog Input table"
        INDEX   { AnalogInputId }
        ::= { AnalogInputTable 1 }

    AnalogInputEntry ::=
        SEQUENCE {
          AnalogInputId
              OCTET STRING,
          AnalogInputName
              OCTET STRING,
          AnalogInputFloatValue
              Float,
          AnalogInputIntegerValue
              INTEGER,
          AnalogInputUnity
              OCTET STRING
        }

    AnalogInputId OBJECT-TYPE
        SYNTAX  OCTET STRING
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Analog Input Id"
        ::= { AnalogInputEntry 1 }

    AnalogInputName OBJECT-TYPE
        SYNTAX  OCTET STRING
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Analog Input Name"
        ::= { AnalogInputEntry 2 }

    AnalogInputFloatValue OBJECT-TYPE
        SYNTAX  Float
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Analog Input Float Value"
        ::= { AnalogInputEntry 3 }

    AnalogInputIntegerValue OBJECT-TYPE
        SYNTAX  INTEGER
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Analog Input Integer Value"
        ::= { AnalogInputEntry 4 }

    AnalogInputUnity OBJECT-TYPE
        SYNTAX  OCTET STRING
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Analog Input Unity"
        ::= { AnalogInputEntry 5 }


------------------------------------------------------------
-- POWER SUPPLYS
------------------------------------------------------------

PowerSupplys   OBJECT IDENTIFIER ::= {eps8XM 5 }

    PowerSupplyTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF PowerSupplyEntry
        MAX-ACCESS  not-accessible
        STATUS  current
        DESCRIPTION
	        "Power Supply"
        ::= { PowerSupplys 1 }

    PowerSupplyEntry OBJECT-TYPE
        SYNTAX  PowerSupplyEntry
        MAX-ACCESS  not-accessible
        STATUS  current
        DESCRIPTION
              "Row definition for the Power Supply table"
        INDEX   { PowerSupplyId }
        ::= { PowerSupplyTable 1 }

    PowerSupplyEntry ::=
        SEQUENCE {
          PowerSupplyId
              OCTET STRING,
          PowerSupplyName
              OCTET STRING,
          PowerSupplyState
              OCTET STRING
        }

    PowerSupplyId OBJECT-TYPE
        SYNTAX  OCTET STRING
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Power Supply Id"
        ::= { PowerSupplyEntry 1 }

    PowerSupplyName OBJECT-TYPE
        SYNTAX  OCTET STRING
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Power Supply Name"
        ::= { PowerSupplyEntry 2 }

    PowerSupplyState OBJECT-TYPE
        SYNTAX  OCTET STRING
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Power Supply State"
        ::= { PowerSupplyEntry 3 }


------------------------------------------------------------
-- DIGITAL INPUTS
------------------------------------------------------------

DigitalInputs  OBJECT IDENTIFIER ::= {eps8XM 6 }

    DigitalInputTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF DigitalInputEntry
        MAX-ACCESS  not-accessible
        STATUS  current
        DESCRIPTION
	        "Digital Input"
        ::= { DigitalInputs 1 }

    DigitalInputEntry OBJECT-TYPE
        SYNTAX  DigitalInputEntry
        MAX-ACCESS  not-accessible
        STATUS  current
        DESCRIPTION
              "Row definition for the Digital Input table"
        INDEX   { DigitalInputId }
        ::= { DigitalInputTable 1 }

    DigitalInputEntry ::=
        SEQUENCE {
          DigitalInputId
              OCTET STRING,
          DigitalInputName
              OCTET STRING,
          DigitalInputState
              OCTET STRING
        }

    DigitalInputId OBJECT-TYPE
        SYNTAX  OCTET STRING
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Digital Input Id"
        ::= { DigitalInputEntry 1 }

    DigitalInputName OBJECT-TYPE
        SYNTAX  OCTET STRING
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Digital Input Name"
        ::= { DigitalInputEntry 2 }

    DigitalInputState OBJECT-TYPE
        SYNTAX  OCTET STRING
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Digital Input State"
        ::= { DigitalInputEntry 3 }


------------------------------------------------------------
-- POWER OUTLETS
------------------------------------------------------------

PowerOutlets   OBJECT IDENTIFIER ::= {eps8XM 7 }

    PowerOutletTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF PowerOutletEntry
        MAX-ACCESS  not-accessible
        STATUS  current
        DESCRIPTION
	        "Power Outlet"
        ::= { PowerOutlets 1 }

    PowerOutletEntry OBJECT-TYPE
        SYNTAX  PowerOutletEntry
        MAX-ACCESS  not-accessible
        STATUS  current
        DESCRIPTION
              "Row definition for the Power Outlet table"
        INDEX   { PowerOutletId }
        ::= { PowerOutletTable 1 }

    PowerOutletEntry ::=
        SEQUENCE {
          PowerOutletId
              OCTET STRING,
          PowerOutletName
              OCTET STRING,
          PowerOutletState
              OCTET STRING,
          PowerOutletFunctionList
              OCTET STRING,
          PowerOutletFunction
              INTEGER
        }

    PowerOutletId OBJECT-TYPE
        SYNTAX  OCTET STRING
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Power Outlet Id"
        ::= { PowerOutletEntry 1 }

    PowerOutletName OBJECT-TYPE
        SYNTAX  OCTET STRING
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Power Outlet Name"
        ::= { PowerOutletEntry 2 }

    PowerOutletState OBJECT-TYPE
        SYNTAX  OCTET STRING
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Power Outlet State"
        ::= { PowerOutletEntry 3 }

    PowerOutletFunctionList OBJECT-TYPE
		SYNTAX  OCTET STRING
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Power Outlet Function List"
        ::= { PowerOutletEntry 4 }

    PowerOutletFunction OBJECT-TYPE
		SYNTAX  INTEGER {ready(1), inProgress(2)}
        MAX-ACCESS  read-write
        STATUS  current
        DESCRIPTION
              "Power Outlet Function
              When read, returns if action in progress or not:
              ready(1), inProgress(2).
              When write, execute the action described in 
              PowerOutletFunctionList"
        ::= { PowerOutletEntry 5 }


------------------------------------------------------------
-- DIGITAL OUTPUTS
------------------------------------------------------------

DigitalOutputs  OBJECT IDENTIFIER ::= {eps8XM 8 }

    DigitalOutputTable OBJECT-TYPE
        SYNTAX  SEQUENCE OF DigitalOutputEntry
        MAX-ACCESS  not-accessible
        STATUS  current
        DESCRIPTION
	        "Digital Output"
        ::= { DigitalOutputs 1 }

    DigitalOutputEntry OBJECT-TYPE
        SYNTAX  DigitalOutputEntry
        MAX-ACCESS  not-accessible
        STATUS  current
        DESCRIPTION
              "Row definition for the Digital Output table"
        INDEX   { DigitalOutputId }
        ::= { DigitalOutputTable 1 }

    DigitalOutputEntry ::=
        SEQUENCE {
          DigitalOutputId
              OCTET STRING,
          DigitalOutputName
              OCTET STRING,
          DigitalOutputState
              OCTET STRING,
          DigitalOutputFunctionList
              OCTET STRING,
          DigitalOutputFunction
              INTEGER
        }

    DigitalOutputId OBJECT-TYPE
        SYNTAX  OCTET STRING
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Digital Output Id"
        ::= { DigitalOutputEntry 1 }

    DigitalOutputName OBJECT-TYPE
        SYNTAX  OCTET STRING
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Digital Output Name"
        ::= { DigitalOutputEntry 2 }

    DigitalOutputState OBJECT-TYPE
        SYNTAX  OCTET STRING
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Digital Output State"
        ::= { DigitalOutputEntry 3 }

    DigitalOutputFunctionList OBJECT-TYPE
		SYNTAX  OCTET STRING
        MAX-ACCESS  read-only
        STATUS  current
        DESCRIPTION
              "Digital Output Function List"
        ::= { DigitalOutputEntry 4 }

    DigitalOutputFunction OBJECT-TYPE
		SYNTAX  INTEGER {ready(1), inProgress(2)}
        MAX-ACCESS  read-write
        STATUS  current
        DESCRIPTION
              "Digital Output Function
              When read, returns if action in progress or not:
              ready(1), inProgress(2).
              When write, execute the action described in 
              DigitalOutputFunctionList"
        ::= { DigitalOutputEntry 5 }


END
